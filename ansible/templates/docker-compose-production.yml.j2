version: '3.8'

services:
  app:
    image: {{ docker_image }}
    container_name: {{ app_name }}-app
    restart: unless-stopped
    ports:
      - "{{ app_port }}:{{ app_port }}"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - DATABASE_URL={{ database_url | default('postgresql://user:pass@localhost:5432/ecommerce') }}
      - REDIS_URL={{ redis_url | default('redis://localhost:6379') }}
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:15-alpine
    container_name: {{ app_name }}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: {{ postgres_user | default('ecommerce') }}
      POSTGRES_PASSWORD: {{ postgres_password | default('password') }}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: {{ app_name }}-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: {{ app_name }}-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - app-network
    depends_on:
      - app

volumes:
  postgres-data:
  redis-data:

networks:
  app-network:
    driver: bridge 